#ifndef _KEY_H_KEY_TYPE_DEF
#define _KEY_H_KEY_TYPE_DEF


#define MAX_TARE_KEY 9

typedef enum {
	KS_CLEAR	= 0x0b,
	KS_TARE		= 0x0f,

	KS_PRINT	= 0x15,
	KS_FEED     = 0x16,
	KS_MULTI 	= 0x26,
	KS_NUM_0	= 0x28,
	KS_NUM_1,	
	KS_NUM_2,
	KS_NUM_3,
	KS_NUM_4,
	KS_NUM_5,
	KS_NUM_6,
	KS_NUM_7,
	KS_NUM_8,
	KS_NUM_9,
	KS_NUM_00,
	KS_PLU		= 0x46,
    KS_SALE_PER = 0x56, // Percent Sale
	KS_SALE_SPC = 0x57, // Special Sale
	KS_SALE_NEG = 0x58, // Minus Sale
	KS_SALE_SPECIAL = 0x59, // specail price discount
	KS_FIXED_5PER = 0x60, // Fixed Discount 5 Percent
	KS_FIXED_10PER = 0x61, // Fixed Discount 10 Percent
	KS_FIXED_20PER = 0x62, // Fixed Discount 20 Percent
	KS_FIXED_30PER = 0x63, // Fixed Discount 30 Percent
	KS_FIXED_40PER = 0x64, // Fixed Discount 40 Percent
	KS_FIXED_50PER = 0x65, // Fixed Discount 50 Percent    
	KS_CALMODE	= 0x66,
	KS_MODE		= 0x75,
	KS_ZERO		= 0x78,
    KS_NUMBER_00= 0x79,

	KS_DEPT_CALL    = 0x7A,
	KS_CLERK_CALL   = 0x7B,
	KS_CUSTOMER_CALL= 0x7C,
	KS_TARE_CALL    = 0x7D,
	KS_CURRENCY_CALL= 0x7E,
	KS_LEDON    = 0x80,
	KS_DATETIME = 0x81,
	KS_EDIT_DATETIME=0x82,
	KS_MISC_WEIGHT =0x83,
	KS_MISC_PCS  =0x84,
	KS_MISC_COUNT=0x85,
	KS_FOR     =0x86,
	KS_AUTO    =0x87,
	KS_SAVE    =0x88,
	KS_PREPACK =0x89,
	KS_OVERRIDE=0x8A,
    KS_RETURN  =0x8B,
    KS_PAY     =0x8C,

	KS_ADD     =0x8E,
	KS_TTL     =0x8F,
	KS_VOID    =0x90,
	KS_KGLB    =0x91,
	KS_UNIT1   =0x92,
	KS_UNIT2   =0x93,
	KS_UNIT3   =0x94,
	KS_UNIT4   =0x95,
	KS_UNIT5   =0x96,
	KS_UNIT6   =0x97,

//
	KS_MINUS   =0x98,
	KS_FIXED   =0x99,
	KS_CASHOPEN    =0x9A,
	KS_TYPE    =0x9B,
	KS_EDT_SELL   =0x9C,
	KS_EDT_ORIGIN =0x9D,
	KS_EDT_ITEM   =0x9F,
	KS_EDT_PRICE  =0xA0,

	KS_BATCH  =0xA1,
	KS_GTOTAL  =0xA2,
	KS_REFERENCE  =0xA3,
	KS_INWEIGHT  =0xA4,
	KS_LABELTICKET = 0xA5,
	KS_EDT_DISCOUNT = 0xA7,
	KS_EDT_DELPLU = 0xA8,
	KS_EDT_SPEEDKEY = 0xA9,
	KS_TEST_PRINT = 0xAA,
	KS_LASTVOID = 0xAB,
	KS_SAVEPRICE = 0xAC,       //SG060227
	KS_PACKDATE = 0xAD,        //SG060309
	KS_EDT_PACKDATE = 0xAE,
	KS_PRINTDATE = 0xAF,       //SG060512

	KS_CHG_PRTMODE = 0xB0,		// Added by CJK
	KS_RESET	= 0xB1,
	KS_JOBBATCH = 0xB2,
	KS_SCANPRINT = 0xB3,        //SG070122
	KS_EDT_TAX = 0xB4,			
	KS_NONE_INDIV = 0xB5,	   	//USE_TRACE_STANDALONE
	KS_EDT_TRACE =0xB6,			//insert by se-hyung for function traceability key 20070706
	KS_TICKET_NO =0xB7,        	//SG070723. set ticket number
	KS_SCAN_CLERK =0xB8,		
	KS_BARCODE =0xB9,			
	KS_EDT_INGREDIENT	= 0xBA,	
	KS_LMSG_CALL	= 0xBB,		
	KS_PACKED_DATE	= 0xBC,		
	KS_DATE_MODE	= 0xBD,		
	KS_CHECKIN = 0xBE,			
	KS_EXT_PRINT = 0xBF,		
	KS_EXT_ADD_PRINT = 0xC0,

#ifdef USE_KOR_TRACE
	KS_KTR_REQ_ID = 0xC1,		// Added by CJK 20060310
	KS_KTR_REQ_NEXTID = 0xC2,
	KS_KTR_REQ_NONEID = 0xC3,
	KS_KTR_REQ_COMPID = 0xC4,
	KS_KTR_REQ_PRINT = 0xC5,
	KS_KTR_REQ_FIXEDID = 0xC6,
	KS_KTR_MANUAL_OPER = 0xC7,
	KS_KTR_MEMBER = 0xC8,
#endif
	KS_INPUT_ITEMCODE13 = 0xC9,
#ifdef USE_TOPMART_DEFAULT //sewon 170117
	KS_INPUTQTY = 0xCA,
	KS_SALE_PRICE_CHG_UNITPRICE = 0xCB,
	KS_PACKDATE_FLAG = 0xCC,
	KS_ASK_INDIVIDUAL = 0xCD,
#endif
	KS_ONLINE = 0xCE,
#ifdef USE_EDIT_TOTALPRICE
	KS_EDIT_TOTALPRICE = 0xCF,
#endif
	KS_RFID_TAG = 0xD1,			//Added by JJANG 20090703
	KS_CHECK_PROD = 0xD2,		//for Emart, 생산등록개수 조회
	KS_DELETE_PROD = 0xD3,		//for Emart, 생산등록개수 삭제
	KS_CUSTOMER_NO = 0xD4,
	KS_CUSTOMER_CLOSE = 0xD5,
	KS_REOPEN = 0xD6,			//Added by JJANG 20090904 
	KS_COPY_TICKET = 0xD7,		//Copy ticket
	KS_GLOBAL_TAX = 0xD8,		//선택된PLU 에 대해 GLOBAL TAX를 임시 적용.
	KS_GLOBAL_LABEL_BAR = 0xD9,	//GLOBAL LABEL&BARCODE 적용
#ifdef USE_CHN_IO_BOARD
	KS_USBSAVE_LOG = 0xDA,	// USB 저장기능
#endif
	KS_NETWEIGHT  =0xDB,

	KS_FUNC = 0xDC,
	KS_EDT_KEY = 0xDD,
	KS_PLU_LIST = 0xDE,
	KS_LOCK_SCREEN = 0xDF,

#ifdef USE_TRACE_STANDALONE
	KS_TRACE_SAVETYPE = 0xE1,
#endif
#if defined(USE_CHN_CART_SCALE) || defined(USE_CHN_EMART_TRACE)
	KS_CHN_CALL_TRACE = 0xE2,
	KS_CHN_TRACE1 = 0xE3,
	KS_CHN_TRACE2 = 0xE4,
	KS_CHN_TRACE3 = 0xE5,
	KS_CHN_TRACE4 = 0xE6,
	KS_CHN_EDIT_REMAIN = 0xE7,
#endif
    KS_EDIT_STORE = 0xE8,
    KS_CHANGE_PREFIX = 0xE9,
#ifdef USE_LOT_NUMBER_FUNCTION
	KS_EDIT_LOT=	0xEA,
#endif

	KS_PAY_1     = 0xF1,
	KS_PAY_2,
	KS_PAY_3,
	KS_PAY_4,
	KS_PAY_5,
	KS_PAY_6,
	KS_PAY_7,

#ifdef USE_HYUNDAI_SET_FUNCTION
	KS_SET_START	= 0x1FC, // 508
	KS_SET_END		= 0x1FD, // 509
	KS_SET_CANCEL	= 0x1FE, // 510
#endif
#ifdef USE_REGIST_DISPOSAL
	KS_DISPOSAL		= 0x1FF, // 511
#endif
//	KS_CHAR_CODE = 0xB1,
	KS_CLERK_01	  = 0x201,		// Added by JJANG 20070430
	KS_CLERK_02,
	KS_CLERK_03,
	KS_CLERK_04,
	KS_CLERK_05,
	KS_CLERK_06,
	KS_CLERK_07,
	KS_CLERK_08,
	KS_CLERK_09,
	KS_CLERK_10,
	KS_CLERK_11,
	KS_CLERK_12,
	KS_CLERK_13,
	KS_CLERK_14,
	KS_CLERK_15,
	KS_CLERK_16,
	KS_CLERK_17,
	KS_CLERK_18,
	KS_CLERK_19,
	KS_CLERK_20,
	KS_CLERK_21,
	KS_CLERK_22,
	KS_CLERK_23,
	KS_CLERK_24,
	KS_CLERK_25,
	KS_CLERK_26,
	KS_CLERK_27,
	KS_CLERK_28,
	KS_CLERK_29,
	KS_CLERK_30,
	KS_CLERK_31,
	KS_CLERK_32,
	KS_CLERK_33,	
	KS_CLERK_34,	
	KS_CLERK_35,	
	KS_CLERK_36,	
	KS_CLERK_37,	
	KS_CLERK_38,	
	KS_CLERK_39,	
	KS_CLERK_40,	
	KS_CLERK_41,	
	KS_CLERK_42,	
	KS_CLERK_43,	
	KS_CLERK_44,	
	KS_CLERK_45,	
	KS_CLERK_46,	
	KS_CLERK_47,	
	KS_CLERK_48,	
	KS_CLERK_49,	
	KS_CLERK_50,	
	KS_CLERK_51,	
	KS_CLERK_52,	
	KS_CLERK_53,	
	KS_CLERK_54,	
	KS_CLERK_55,	
	KS_CLERK_56,	
	KS_CLERK_57,	
	KS_CLERK_58,	
	KS_CLERK_59,	
	KS_CLERK_60,	
	KS_CLERK_61,	
	KS_CLERK_62,	
	KS_CLERK_63,	
	KS_CLERK_64,	


	KS_DEPT_01	 = 0x241,
	KS_DEPT_02,
	KS_DEPT_03,
	KS_DEPT_04,
	KS_DEPT_05,
	KS_DEPT_06,
	KS_DEPT_07,
	KS_DEPT_08,
	KS_DEPT_09,
	KS_DEPT_10,
	KS_DEPT_11,
	KS_DEPT_12,

	KS_CHESS = 0x26B,

	KS_CUSTOMER_01	= 0x281,
	KS_CUSTOMER_02,
	KS_CUSTOMER_03,
	KS_CUSTOMER_04,
	KS_CUSTOMER_05,
	KS_CUSTOMER_06,
	KS_CUSTOMER_07,
	KS_CUSTOMER_08,
	KS_CUSTOMER_09,
	KS_CUSTOMER_10,
	KS_CUSTOMER_11,
	KS_CUSTOMER_12,

	KS_CURRENCY_01	= 0x291,
	KS_CURRENCY_02,
	KS_CURRENCY_03,
	KS_CURRENCY_04,
//	KS_CURRENCY_05,			//delete by JJANG 20070502
//	KS_CURRENCY_06,
//	KS_CURRENCY_07,
//	KS_CURRENCY_08,
//	KS_CURRENCY_09,
//	KS_CURRENCY_10,
//	KS_CURRENCY_11,
//	KS_CURRENCY_12,

	KS_TARE_01	= 0x2A1,
	KS_TARE_02,
	KS_TARE_03,
	KS_TARE_04,
	KS_TARE_05,
	KS_TARE_06,
	KS_TARE_07,
	KS_TARE_08,
	KS_TARE_09,
//	KS_TARE_10,	//CJK071101
//	KS_TARE_11,
//	KS_TARE_12,

#ifdef USE_TRACE_STANDALONE
	KS_INDIVIDUAL_01	= 0x2C1,
	KS_INDIVIDUAL_02,
	KS_INDIVIDUAL_03,
	KS_INDIVIDUAL_04,
	KS_INDIVIDUAL_05,
	KS_INDIVIDUAL_06,
	KS_INDIVIDUAL_07,
	KS_INDIVIDUAL_08,
	KS_INDIVIDUAL_09,
	KS_INDIVIDUAL_10,
	KS_INDIVIDUAL_11,
	KS_INDIVIDUAL_12,
	KS_INDIVIDUAL_13,
	KS_INDIVIDUAL_14,
	KS_INDIVIDUAL_15,
	KS_INDIVIDUAL_16,	//0x2d0
	KS_EDIT_INDIVIDUAL,	//0x2d1
	KS_CALL_INDIVIDUAL,	//0x2d2
	KS_INPUT_INDIVIDUAL,	//0x2d3
	KS_INPUT_LOT,			//0x2d4
	KS_LIST_INDIV,		//0x2d5
	KS_CALL_SLAUGHTHOUSE,	//0x2d6
	KS_MULTI_INDIVIDUAL,	//0x2d7
	KS_CALL_MEATUSE,		//0x2d8
	KS_LOT_LIST,			//0x2d9
   	KS_CALL_MEATPART,		//0x2da
	KS_CALL_MEATGRADE,		//0x2db
	KS_BACK_LABEL_VALID,	//0x2dc
	KS_OFFLINE,				//0x2dd
	KS_CALL_INDIV,	//0x2de
#endif
#ifdef USE_DIVIDING_FUNCTION
	KS_DIVIDE_HALF = 0x2dd,
	KS_DIVIDE_ONE_THIRD = 0x2de,
	KS_DIVIDE_QUARTER = 0x2df,
#endif

	KS_LABEL_01 = 0x2E1,
	KS_LABEL_02,
	KS_LABEL_03,
	KS_LABEL_04,
	KS_LABEL_05,
	KS_LABEL_06,
	KS_LABEL_07,
	KS_LABEL_08,
	KS_LABEL_09,
	KS_LABEL_10,
	KS_LABEL_11,
	KS_LABEL_12,
	KS_LABEL_13,
	KS_LABEL_14,
	KS_LABEL_15,
	KS_LABEL_16,
	KS_LABEL_17,
	KS_LABEL_18,
	KS_LABEL_19,
	KS_LABEL_20,

	KS_VIEW_LOT = 757,
	KS_MAKE_B_LOT,
	KS_MAKE_P_LOT,
	KS_INDIV_SAVE_MODE,
	KS_LIST_SLAUGHT,
	KS_LIST_INGREDIENT,
	KS_LIST_MEATUSE,
	KS_LIST_MEATPART,
#ifdef USE_SETPRODUCT_SALE
	KS_SETPRODUCT_CLEAR,
	KS_MODE_SETPRODUCT,
	KS_NONWEIGHING_LABLE,
#endif
	KS_CHANGE_KEYSET = 768,

	KS_PLU_01	= 0x401,
	KS_PLU_02,
	KS_PLU_03,
	KS_PLU_04,
	KS_PLU_05,
	KS_PLU_06,
	KS_PLU_07,
	KS_PLU_08,
	KS_PLU_09,
	KS_PLU_10,
	KS_PLU_11,
	KS_PLU_12,
	KS_PLU_13,
	KS_PLU_14,
	KS_PLU_15,
	KS_PLU_16,
	KS_PLU_17,
	KS_PLU_18,
	KS_PLU_19,
	KS_PLU_20,
	KS_PLU_21,
	KS_PLU_22,
	KS_PLU_23,
	KS_PLU_24,
	KS_PLU_25,
	KS_PLU_26,
	KS_PLU_27,
	KS_PLU_28,
	KS_PLU_29,
	KS_PLU_30,
	KS_PLU_31,
	KS_PLU_32,
	KS_PLU_33,
	KS_PLU_34,
	KS_PLU_35,
	KS_PLU_36,
	KS_PLU_37,
	KS_PLU_38,
	KS_PLU_39,
	KS_PLU_40,
	KS_PLU_41,
	KS_PLU_42,
	KS_PLU_43,
	KS_PLU_44,
	KS_PLU_45,
	KS_PLU_46,
	KS_PLU_47,
	KS_PLU_48,
	KS_PLU_49,
	KS_PLU_50,
	KS_PLU_51,
	KS_PLU_52,
	KS_PLU_53,
	KS_PLU_54,
	KS_PLU_55,
	KS_PLU_56,
	KS_PLU_57,
	KS_PLU_58,
	KS_PLU_59,
	KS_PLU_60,
	KS_PLU_61,
	KS_PLU_62,
	KS_PLU_63,
	KS_PLU_64,
	KS_PLU_65,
	KS_PLU_66,
	KS_PLU_67,
	KS_PLU_68,
	KS_PLU_69,
	KS_PLU_70,
	KS_PLU_71,
	KS_PLU_72,
	KS_PLU_73,
	KS_PLU_74,
	KS_PLU_75,
	KS_PLU_76,
	KS_PLU_77,
	KS_PLU_78,
	KS_PLU_79,
	KS_PLU_80,
	KS_PLU_81,
	KS_PLU_82,
	KS_PLU_83,
	KS_PLU_84,
	KS_PLU_85,
	KS_PLU_86,
	KS_PLU_87,
	KS_PLU_88,
	KS_PLU_89,
	KS_PLU_90,
	KS_PLU_91,
	KS_PLU_92,
	KS_PLU_93,
	KS_PLU_94,
	KS_PLU_95,
	KS_PLU_96,
	KS_PLU_97,
	KS_PLU_98,
	KS_PLU_99,
	KS_PLU_100,
	KS_PLU_101,
	KS_PLU_102,
	KS_PLU_103,
	KS_PLU_104,
	KS_PLU_105,
	KS_PLU_106,
	KS_PLU_107,
	KS_PLU_108,
	KS_PLU_109,
	KS_PLU_110,
	KS_PLU_111,
	KS_PLU_112,
	KS_PLU_113,
	KS_PLU_114,
	KS_PLU_115,
	KS_PLU_116,
	KS_PLU_117,
	KS_PLU_118,
	KS_PLU_119,
	KS_PLU_120,
	KS_PLU_121,
	KS_PLU_122,
	KS_PLU_123,
	KS_PLU_124,
	KS_PLU_125,
	KS_PLU_126,
	KS_PLU_127,
	KS_PLU_128,
	KS_PLU_129,
	KS_PLU_130,
	KS_PLU_131,
	KS_PLU_132,
	KS_PLU_133,
	KS_PLU_134,
	KS_PLU_135,
	KS_PLU_136,
	KS_PLU_137,
	KS_PLU_138,
	KS_PLU_139,
	KS_PLU_140,
	KS_PLU_141,
	KS_PLU_142,
	KS_PLU_143,
	KS_PLU_144,
	KS_PLU_145,
	KS_PLU_146,
	KS_PLU_147,
	KS_PLU_148,
	KS_PLU_149,
	KS_PLU_150,
	KS_PLU_151,
	KS_PLU_152,
	KS_PLU_153,
	KS_PLU_154,
	KS_PLU_200,


#ifdef USE_TRACE_STANDALONE
	KS_SPECIALUSE_01 = 0x701,
	KS_SPECIALUSE_02, 
	KS_SPECIALUSE_03,
	KS_SPECIALUSE_04,
	KS_SPECIALUSE_05,
	KS_SPECIALUSE_06,
	KS_SPECIALUSE_07,
	KS_SPECIALUSE_08,
	KS_SPECIALUSE_09,
	KS_SPECIALUSE_10,
	KS_SPECIALUSE_11,
	KS_SPECIALUSE_12,
	KS_SPECIALUSE_13,
	KS_SPECIALUSE_14,
	KS_SPECIALUSE_15,
	KS_SPECIALUSE_16,
	KS_SPECIALUSE_17,
	KS_SPECIALUSE_18,
	KS_SPECIALUSE_19,
	KS_SPECIALUSE_20,
	KS_SPECIALUSE_21,
	KS_SPECIALUSE_22,
	KS_SPECIALUSE_23,
	KS_SPECIALUSE_24,
	KS_SPECIALUSE_25,
	KS_SPECIALUSE_26,
	KS_SPECIALUSE_27,
	KS_SPECIALUSE_28,
	KS_SPECIALUSE_29,
	KS_SPECIALUSE_30,
	KS_SPECIALUSE_31,
	KS_SPECIALUSE_32,
	KS_SPECIALUSE_33,
	KS_SPECIALUSE_34,
	KS_SPECIALUSE_35,
	KS_SPECIALUSE_36,
	KS_SPECIALUSE_37,
	KS_SPECIALUSE_38,
	KS_SPECIALUSE_39,
	KS_SPECIALUSE_40,
	KS_SPECIALUSE_41,
	KS_SPECIALUSE_42,
	KS_SPECIALUSE_43,
	KS_SPECIALUSE_44,
	KS_SPECIALUSE_45,
	KS_SPECIALUSE_46,
	KS_SPECIALUSE_47,
	KS_SPECIALUSE_48,
	KS_SPECIALUSE_49,
	KS_SPECIALUSE_50,
	KS_SPECIALUSE_51,
	KS_SPECIALUSE_52, 
	KS_SPECIALUSE_53,
	KS_SPECIALUSE_54,
	KS_SPECIALUSE_55,
	KS_SPECIALUSE_56,
	KS_SPECIALUSE_57,
	KS_SPECIALUSE_58,
	KS_SPECIALUSE_59,
	KS_SPECIALUSE_60,
	KS_SPECIALUSE_61,
	KS_SPECIALUSE_62,
	KS_SPECIALUSE_63,
	KS_SPECIALUSE_64,
	KS_SPECIALUSE_65,
	KS_SPECIALUSE_66,
	KS_SPECIALUSE_67,
	KS_SPECIALUSE_68,
	KS_SPECIALUSE_69,
	KS_SPECIALUSE_70,
	KS_SPECIALUSE_71,
	KS_SPECIALUSE_72,
	KS_SPECIALUSE_73,
	KS_SPECIALUSE_74,
	KS_SPECIALUSE_75,
	KS_SPECIALUSE_76,
	KS_SPECIALUSE_77,
	KS_SPECIALUSE_78,
	KS_SPECIALUSE_79,
	KS_SPECIALUSE_80,
	KS_SPECIALUSE_81,
	KS_SPECIALUSE_82,
	KS_SPECIALUSE_83,
	KS_SPECIALUSE_84,
	KS_SPECIALUSE_85,
	KS_SPECIALUSE_86,
	KS_SPECIALUSE_87,
	KS_SPECIALUSE_88,
	KS_SPECIALUSE_89,
	KS_SPECIALUSE_90,
	KS_SPECIALUSE_91,
	KS_SPECIALUSE_92,
	KS_SPECIALUSE_93,
	KS_SPECIALUSE_94,
	KS_SPECIALUSE_95,
	KS_SPECIALUSE_96,
	KS_SPECIALUSE_97,
	KS_SPECIALUSE_98,
	KS_SPECIALUSE_99,
	KS_SPECIALUSE_100,  
#endif
	KS_TAB1 = 1893,
	KS_TAB2,
	KS_TAB3,
	KS_TAB4,
	KS_SHORTCUT,
	KS_PREV_PAGE,
	KS_NEXT_PAGE,
	KS_SELECT_CAT,
	KS_PLU_256 = 0x801,
	KS_PLU_1000 = 0xAE9,
	KS_PLU_1008 = 2801,
	KS_PLU_1500 = 3293,
	KS_UNUSE  =0x2FFF
} KEY_SM_CODE;

typedef enum {
	KP_CODE_BASE = 0x600,
	KP_CODE_A1C9 = 0x601,
	KP_CODE_A1E6 = 0x602,    
	KP_CODE_END  = 0x6ff
} KEY_SPEC_CODE;

#if defined(USE_ARAB_FONT) || defined(HEBREW_FONT)
typedef enum {
	KEY_TYPE_FUNCTION,
	KEY_TYPE_NUMERIC,
	KEY_TYPE_ASCII,
	KEY_TYPE_KOREA,
	KEY_TYPE_CODE,
	KEY_TYPE_SPEEDPLU,
	KEY_TYPE_CLERK,
	KEY_TYPE_CUSTOMER,
	KEY_TYPE_CURRENCY,
	KEY_TYPE_DEPT,
	KEY_TYPE_TARE,
	KEY_TYPE_INDIVIDUAL,
	KEY_TYPE_LABEL,
	KEY_TYPE_SPECIALUSE,  
    KEY_TYPE_COMBINED_ARAB //arab font     
} KEY_TYPE;
#else
typedef enum {
	KEY_TYPE_FUNCTION,
	KEY_TYPE_NUMERIC,
	KEY_TYPE_ASCII,
	KEY_TYPE_KOREA,
	KEY_TYPE_CODE,
	KEY_TYPE_SPEEDPLU,
	KEY_TYPE_CLERK,
	KEY_TYPE_CUSTOMER,
	KEY_TYPE_CURRENCY,
	KEY_TYPE_DEPT,
	KEY_TYPE_TARE,
	KEY_TYPE_INDIVIDUAL,
	KEY_TYPE_LABEL,
	KEY_TYPE_SPECIALUSE 
} KEY_TYPE;
#endif 
#endif

#ifndef _KEY_H_KEY_NUM_CODE_DEF
#define _KEY_H_KEY_NUM_CODE_DEF
typedef enum {
	KEY_NUM_0 		= 0,
	KEY_NUM_1,
	KEY_NUM_2,
	KEY_NUM_3,
	KEY_NUM_4,
	KEY_NUM_5,
	KEY_NUM_6,
	KEY_NUM_7,
	KEY_NUM_8,
	KEY_NUM_9,
	KEY_NUM_10
} KEY_NUM_CODE;

typedef enum {	
	KEY_SHIFT	= 0x0c
} KEY_COMMON;

typedef enum {
	KP_I_BASE= 0x500,
	KP_I_RV1,
	KP_I_K ,
	KP_I_KK,
	KP_I_N ,
	KP_I_D ,
	KP_I_DD,
	KP_I_R ,
	KP_I_M ,
	KP_I_B ,
	KP_I_BB,
	KP_I_S ,
	KP_I_SS,
	KP_I_O ,
	KP_I_J ,
	KP_I_JJ,
	KP_I_CH,
	KP_I_C ,
	KP_I_T ,
	KP_I_P ,
	KP_I_H ,

	KP_N_BASE= 0x520,
	KP_N_RV1,
	KP_N_RV2,
	KP_N_A 	,
	KP_N_AE	,
	KP_N_YA	,
	KP_N_YAE,
	KP_N_EO	,
	KP_N_RV3,
	KP_N_RV4,
	KP_N_E	,
	KP_N_YEO,
	KP_N_YE	,
	KP_N_O	,
	KP_N_WA	,
	KP_N_WAE,
	KP_N_RV5,
	KP_N_RV6,
	KP_N_OE	,
	KP_N_YO	,
	KP_N_U	,
	KP_N_WO	,
	KP_N_WE	,
	KP_N_WI	,
	KP_N_RV7,
	KP_N_RV8,
	KP_N_YU	,
	KP_N_EU	,
	KP_N_UI	,
	KP_N_I	,
	KP_F_BASE=0x540
} KEY_HAN_CODE;

#ifdef USE_ARAB_FONT
typedef enum {
	KP_ARAB_BASE = 0x700,
	KP_ARAB_00, 		// 0xE1 + 0xC2
	KP_ARAB_01,	 		// 0xE1 + 0xC3
	KP_ARAB_02,	 		// 0xE1 + 0xC5
	KP_ARAB_03	 		// 0xE1 + 0xC7
} KEY_ARAB_COMBINE_CODE;
#endif

typedef enum {
	KP_CLEAR   	= 0x0b,
	KP_TARE		= 0x0f,
	KP_ESC		= 0x14,
	KP_ENTER	= 0x15,
	KP_DEL		= 0x16,
	KP_BS		= 0x17,
	KP_INSERT	= 0x18,
	KP_SAVE		= 0x19,

	// Added by CJK
//	KP_LINEFEED	= 0x1A,
	KP_CAPS		= 0x1B,
	/////////////////

	KP_TEST		= 0x35,	//임시(테스트용)
	KP_CHAR_CODE= 0x36,
    KP_CHANGELANG  = 0x37,
	KP_FEED     = 0x38,
	KP_PHONETYPE	= 0x39,

	KP_ZERO		= 0x78,
	KP_ARROW_DN	= 0x79,
	KP_ARROW_UP	= 0x7A,
	KP_ARROW_RI	= 0x7B,
	KP_ARROW_LF	= 0x7C,
	KP_PAGE_DN,
	KP_PAGE_UP,
	KP_DEALER   = 0x80,
	KP_CLOSE_TICKET = 0x81,     //Close transaction without printing ticket,
	KP_ASC_00	= 0x0300,
	KP_ASC_LF	= 0x030A,
	KP_ASC_0C	= 0x030C,
	KP_ASC_20	= 0x0320,	// ' '
	KP_ASC_21,				// '!'
	KP_ASC_22,				// '"'
	KP_ASC_23,				// '#'
	KP_ASC_24,				// '$'
	KP_ASC_25,				// '%'
	KP_ASC_26,				// '&'
	KP_ASC_27,
	KP_ASC_28,
	KP_ASC_29,
	KP_ASC_2A,
	KP_ASC_2B,
	KP_ASC_2C,
	KP_ASC_2D,
	KP_ASC_2E,
	KP_ASC_2F,
	KP_ASC_30,
	KP_ASC_31,
	KP_ASC_32,
	KP_ASC_33,
	KP_ASC_34,				
	KP_ASC_35,				
	KP_ASC_36,				
	KP_ASC_37,
	KP_ASC_38,
	KP_ASC_39,
	KP_ASC_3A,
	KP_ASC_3B,
	KP_ASC_3C,
	KP_ASC_3D,
	KP_ASC_3E,
	KP_ASC_3F,
	KP_ASC_40,

	KP_ASC_A	= 0x0341,
	KP_ASC_B,
	KP_ASC_C,
	KP_ASC_D,
	KP_ASC_E,
	KP_ASC_F,
	KP_ASC_G,
	KP_ASC_H,
	KP_ASC_I,
	KP_ASC_J,
	KP_ASC_K,
	KP_ASC_L,
	KP_ASC_M,
	KP_ASC_N,
	KP_ASC_O,
	KP_ASC_P,
	KP_ASC_Q,
	KP_ASC_R,
	KP_ASC_S,
	KP_ASC_T,
	KP_ASC_U,
	KP_ASC_V,
	KP_ASC_W,
	KP_ASC_X,
	KP_ASC_Y,
	KP_ASC_Z,

	KP_ASC_5B,
	KP_ASC_5C,
	KP_ASC_5D,
	KP_ASC_5E,
	KP_ASC_5F,
	KP_ASC_60,

	KP_ASC_A_L	= 0x0361,
	KP_ASC_B_L,
	KP_ASC_C_L,
	KP_ASC_D_L,
	KP_ASC_E_L,
	KP_ASC_F_L,
	KP_ASC_G_L,
	KP_ASC_H_L,
	KP_ASC_I_L,
	KP_ASC_J_L,
	KP_ASC_K_L,
	KP_ASC_L_L,
	KP_ASC_M_L,
	KP_ASC_N_L,
	KP_ASC_O_L,
	KP_ASC_P_L,
	KP_ASC_Q_L,
	KP_ASC_R_L,
	KP_ASC_S_L,
	KP_ASC_T_L,
	KP_ASC_U_L,
	KP_ASC_V_L,
	KP_ASC_W_L,
	KP_ASC_X_L,
	KP_ASC_Y_L,
	KP_ASC_Z_L,

	KP_ASC_7B,
	KP_ASC_7C,
	KP_ASC_7D,
	KP_ASC_7E,
	KP_ASC_7F,
	KP_ASC_80,
	KP_ASC_81,
	KP_ASC_82,
	KP_ASC_83,
	KP_ASC_84,
	KP_ASC_85,
	KP_ASC_86,
	KP_ASC_87,
	KP_ASC_88,
	KP_ASC_89,
	KP_ASC_8A,
	KP_ASC_8B,
	KP_ASC_8C,
	KP_ASC_8D,
	KP_ASC_8E,
	KP_ASC_8F,
	KP_ASC_90,
	KP_ASC_91,
	KP_ASC_92,
	KP_ASC_93,
	KP_ASC_94,
	KP_ASC_95,
	KP_ASC_96,
	KP_ASC_97,
	KP_ASC_98,
	KP_ASC_99,
	KP_ASC_9A,
	KP_ASC_9B,
	KP_ASC_9C,
	KP_ASC_9D,
	KP_ASC_9E,
	KP_ASC_9F,
	KP_ASC_A0,
	KP_ASC_A1,
	KP_ASC_A2,
	KP_ASC_A3,
	KP_ASC_A4,
	KP_ASC_A5,
	KP_ASC_A6,
	KP_ASC_A7,
	KP_ASC_A8,
	KP_ASC_A9,
	KP_ASC_AA,
	KP_ASC_AB,
	KP_ASC_AC,
	KP_ASC_AD,
	KP_ASC_AE,
	KP_ASC_AF,
	KP_ASC_B0,
	KP_ASC_B1,
	KP_ASC_B2,
	KP_ASC_B3,
	KP_ASC_B4,
	KP_ASC_B5,
	KP_ASC_B6,
	KP_ASC_B7,
	KP_ASC_B8,
	KP_ASC_B9,
	KP_ASC_BA,
	KP_ASC_BB,
	KP_ASC_BC,
	KP_ASC_BD,
	KP_ASC_BE,
	KP_ASC_BF,
	KP_ASC_C0,
	KP_ASC_C1,
	KP_ASC_C2,
	KP_ASC_C3,
	KP_ASC_C4,
	KP_ASC_C5,
	KP_ASC_C6,
	KP_ASC_C7,
	KP_ASC_C8,
	KP_ASC_C9,
	KP_ASC_CA,
	KP_ASC_CB,
	KP_ASC_CC,
	KP_ASC_CD,
	KP_ASC_CE,
	KP_ASC_CF,
	KP_ASC_D0,
	KP_ASC_D1,
	KP_ASC_D2,
	KP_ASC_D3,
	KP_ASC_D4,
	KP_ASC_D5,
	KP_ASC_D6,
	KP_ASC_D7,
	KP_ASC_D8,
	KP_ASC_D9,
	KP_ASC_DA,
	KP_ASC_DB,
	KP_ASC_DC,
	KP_ASC_DD,
	KP_ASC_DE,
	KP_ASC_DF,
	KP_ASC_E0,
	KP_ASC_E1,
	KP_ASC_E2,
	KP_ASC_E3,
	KP_ASC_E4,
	KP_ASC_E5,
	KP_ASC_E6,
	KP_ASC_E7,
	KP_ASC_E8,
	KP_ASC_E9,
	KP_ASC_EA,
	KP_ASC_EB,
	KP_ASC_EC,
	KP_ASC_ED,
	KP_ASC_EE,
	KP_ASC_EF,
	KP_ASC_F0,
	KP_ASC_F1,
	KP_ASC_F2,
	KP_ASC_F3,
	KP_ASC_F4,
	KP_ASC_F5,
	KP_ASC_F6,
	KP_ASC_F7,
	KP_ASC_F8,
	KP_ASC_F9,
	KP_ASC_FA,
	KP_ASC_FB,
	KP_ASC_FC,
	KP_ASC_FD,
	KP_ASC_FE,
	KP_ASC_FF,
	KEY_IDENTIFY = 0x3355
} KEY_PM_CODE;
#pragma pack(4)
typedef struct{
	INT8U   keytype;		// 0..6 : 0:Normal, 1:Program, 2: Key1 , 3: Key2
	//INT16U	RawCode;		//Raw keycode		
	INT8U	RawCode;		//Raw keycode		
	INT16U	CnvCode;		//Converted key
	INT16U	PrevCode;		//Prev Port keycode
	INT8U   Buzzer;
	INT8U	Type;
	INT8U	PrevType;
	INT8U	FirstKey;
	INT8U	Shifted;
	INT8U   PgmMode;
	INT8U   key_caps;
	INT8U	PressedModeKey;
	INT8U 	DeviceType;//0=Scale Key, 1=PS/2 Key //HYP 20051221
	INT16U	LastKeyTime;	// CJK070130
	INT8U	ps2_keytype;
	INT8U	IsConvCodeFlag;
    INT8U   PhoneType;		// Pinyin input
    INT8U comm_key;
} KEY_STRKEYDRV;
#pragma pack()
typedef union{
	INT16U wordkey;
	struct{
		INT8U High;
		INT8U Low;
	}Char;
} KEY_UNIKEYCODE;

//extern KEY_STRKEYDRV  KeyDrv;
extern NEARDATA KEY_STRKEYDRV KeyDrv;//HYP 20060412 _huge --> _near for small code size
extern KEY_UNIKEYCODE KeyCode;

#endif
